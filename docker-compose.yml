
services:
  api:
    build:
      context: .
      dockerfile: Presentation/MovieApi.Api/Dockerfile
    ports:
      - "5247:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    restart: unless-stopped
    networks:
        - app-network

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Your_password123 -Q 'SELECT 1' -C || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    networks:
        - app-network

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
        - "5672:5672"    # AMQP port
        - "15672:15672"  # Management UI port
    environment:
        RABBITMQ_DEFAULT_USER: admin
        RABBITMQ_DEFAULT_PASS: password123
    volumes:
        - rabbitmq_data:/var/lib/rabbitmq
    networks:
        - app-network
    healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "ping"]
        interval: 30s
        timeout: 10s
        retries: 5
        
networks:
    app-network:
     driver: bridge

volumes:
  mssql-data:
  rabbitmq_data:
    